{% extends 'base.html.twig' %}

{% block title %}GiftBot 3000 - Recherche Intelligente{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="{{ asset('build/giftsearch.css') }}">
    <link rel="stylesheet" href="{{ asset('build/navbar.css') }}">
    <link rel="stylesheet" href="{{ asset('build/footer.css') }}">
{% endblock %}

{% block body %}
    {% include 'components/_navbar.html.twig' %}

    <div class="main-container">
        <!-- Hero Section -->
        <section class="hero-section">
            <h1 class="hero-title">Votre Cadeau Parfait Vous Attend...</h1>
            <div class="hero-content ">
                <div class="hero-image">
                    <img src="./assets/image/hero.jpg" alt="Gift Search" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex'">
                    <div style="display:none; width:100%; height:100%; background: linear-gradient(135deg, var(--light-pink), var(--primary-pink)); align-items:center; justify-content:center; color:white; font-size:2rem;">
                        <i class="fas fa-search"></i>
                    </div>
                </div>
                <div class="hero-text">
                    <p class="hero-description">
                        Notre moteur de recherche intelligent analyse vos critères 
                        (budget, occasion, centres d'intérêt) pour dénicher des 
                        pépites adaptées. Plus besoin de chercher pendant des heures. 
                        Laissez notre technologie vous proposer des idées qui font 
                        mouche à coup sûr!
                    </p>
                </div>
            </div>
        </section>

        <!-- Search Section -->
        <section class="search-section">
            <h2 class="search-title">Trouvez le Cadeau Idéal en Quelques Clics !</h2>
            {{ form_start(searchForm, {'attr': {'id': 'gift-search-form', 'class': 'search-form'}}) }}
                {{ form_row(searchForm.category, {'attr': {'class': 'form-input'}, 'label_attr': {'class': 'form-label'}, 'row_attr': {'class': 'form-group'}}) }}
                {{ form_row(searchForm.label, {'attr': {'class': 'form-input'}, 'label_attr': {'class': 'form-label'}, 'row_attr': {'class': 'form-group'}}) }}
                <button type="submit" class="btn btn-primary search-btn">Rechercher</button>
            {{ form_end(searchForm) }}
        </section>

        <!-- Results Section -->
        <section class="results-section">
            <h2 class="results-title">Our findings..</h2>
            <p class="results-subtitle">In Store products</p>
            
            <div class="results-container" id="resultsContainer">
                <div id="results-section">
                    <div id="searchStats"></div>
                    <div id="resultsList"></div>
                </div>
                <!-- Loading State -->
                <div class="loading-state" id="loadingState" style="display: none;">
                    <div class="loading-spinner"></div>
                    <p>Recherche en cours...</p>
                </div>

                <!-- No Results State -->
                <div class="no-results" id="noResults">
                    <i class="fas fa-search"></i>
                    <h3>Prêt à découvrir des cadeaux parfaits ?</h3>
                    <p>Utilisez notre moteur de recherche intelligent ci-dessus pour commencer votre recherche.</p>
                </div>

                <!-- Results List -->
            </div>
        </section>
    </div>

    {% include 'components/_footer.html.twig' %}
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // --- Elements ---
            const searchForm = document.getElementById('gift-search-form');
            const loadingState = document.getElementById('loadingState');
            const noResults = document.getElementById('noResults');
            const resultsList = document.getElementById('resultsList');
            const searchStats = document.getElementById('searchStats');

            // --- 1. DYNAMIC CART BADGE LOGIC ---
            function updateCartBadge() {
                const cart = JSON.parse(localStorage.getItem('cart')) || [];
                const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
                // Find the cart icon link by its ID from your navbar
                const cartIconLink = document.getElementById('cartDropdown');
                
                if (!cartIconLink) return; // Exit if the cart icon isn't found

                // Find or create the badge element dynamically
                let badge = cartIconLink.querySelector('.cart-badge');
                if (!badge) {
                    badge = document.createElement('span');
                    badge.className = 'badge rounded-pill bg-danger cart-badge';
                    // Apply styles dynamically so navbar file is untouched
                    badge.style.position = 'absolute';
                    badge.style.top = '-5px';
                    badge.style.right = '-10px';
                    badge.style.fontSize = '0.7em';
                    cartIconLink.appendChild(badge);
                }
                
                // Update the badge's count and visibility
                badge.textContent = totalItems;
                badge.style.display = totalItems > 0 ? 'inline-block' : 'none';
            }

            // Run this once when the page loads to show the correct initial count
            updateCartBadge();

            // --- 2. ADD TO CART LOGIC USING EVENT DELEGATION ---
            // This replaces the old `addCartButtonListeners` function entirely.
            resultsList.addEventListener('click', function(e) {
                // Handle "Add to Cart" button clicks
                const addButton = e.target.closest('.btn-add-cart');
                if (addButton) {
                    e.stopPropagation();
                    const giftItemElement = addButton.closest('.gift-item');

                    // Create a product object that is compatible with your cart page
                    const product = {
                        id: giftItemElement.dataset.giftId,
                        title: giftItemElement.querySelector('.gift-name').textContent,
                        description: giftItemElement.querySelector('.gift-description').textContent,
                        price: parseFloat(giftItemElement.querySelector('.gift-price').textContent),
                        image: giftItemElement.querySelector('.gift-thumb').getAttribute('src'),
                        quantity: 1
                    };

                    // Add the product to localStorage
                    const cart = JSON.parse(localStorage.getItem('cart')) || [];
                    const existingItemIndex = cart.findIndex(item => item.id === product.id);

                    if (existingItemIndex > -1) {
                        cart[existingItemIndex].quantity += 1; // Increment quantity
                    } else {
                        cart.push(product); // Add as a new item
                    }
                    localStorage.setItem('cart', JSON.stringify(cart));

                    // Provide visual feedback on the button
                    const originalHTML = addButton.innerHTML;
                    addButton.innerHTML = '<i class="fas fa-check me-1"></i>Ajouté!';
                    addButton.disabled = true;
                    addButton.style.background = '#4caf50';
                    setTimeout(() => {
                        addButton.innerHTML = originalHTML;
                        addButton.disabled = false;
                        addButton.style.background = '';
                    }, 2000);

                    // Update the dynamic cart badge in the navbar
                    updateCartBadge();
                }
            });

            // --- 3. CORE SEARCH AND DISPLAY FUNCTIONS ---
            searchForm.addEventListener('submit', function(e) {
                e.preventDefault();
                performSearch();
            });

            function performSearch() {
                const formData = new FormData(searchForm);
                const categoryText = searchForm.querySelector('[name*="[category]"] option:checked').text;
                const labelText = searchForm.querySelector('[name*="[label]"] option:checked').text;
                const criteria = {
                    category: categoryText === 'Catégorie' ? '' : categoryText,
                    label: labelText === 'Intérêt' ? '' : labelText
                };

                showLoadingState();
                fetch('{{ path('app_gift_search_results') }}', {
                    method: 'POST',
                    body: formData,
                    headers: { 'X-Requested-With': 'XMLHttpRequest' }
                })
                .then(response => response.json())
                .then(data => displayResults(data, criteria))
                .catch(error => {
                    console.error('Search failed:', error);
                    showNoResults();
                });
            }

            function showLoadingState() {
                noResults.style.display = 'none';
                resultsList.innerHTML = '';
                resultsList.style.display = 'none';
                searchStats.innerHTML = '';
                loadingState.style.display = 'flex';
            }

            function displayResults(gifts, criteria) {
                loadingState.style.display = 'none';
                if (!gifts || gifts.length === 0) {
                    showNoResults();
                    return;
                }
                const criteriaText = [criteria.category, criteria.label].filter(Boolean).join(' | ');
                searchStats.innerHTML = `<strong>${gifts.length} cadeau${gifts.length > 1 ? 's' : ''} trouvé${gifts.length > 1 ? 's' : ''}</strong>${criteriaText ? ' - ' + criteriaText : ''}`;
                resultsList.innerHTML = gifts.map(gift => createGiftHTML(gift)).join('');
                resultsList.style.display = 'grid';
                noResults.style.display = 'none';
                // The `addCartButtonListeners()` call is no longer needed because of event delegation.
            }

            function createGiftHTML(gift) {
                const price = gift.price ? parseFloat(gift.price).toFixed(2) : 'N/A';
                const imageUrl = gift.image ? `/${gift.image}` : 'https://via.placeholder.com/150';
                return `
                    <div class="gift-item" data-gift-id="${gift.id}">
                        <div class="gift-image">
                            <img src="${imageUrl}" alt="${gift.name}" class="gift-thumb">
                        </div>
                        <div class="gift-details">
                            <div class="gift-name">${gift.name}</div>
                            <div class="gift-description">${gift.description || ''}</div>
                            <div class="gift-price">${price} €</div>
                        </div>
                        <div class="gift-actions">
                            <button class="btn btn-add-cart" data-gift-id="${gift.id}">
                                <i class="fas fa-shopping-cart me-1"></i> Ajouter
                            </button>
                        </div>
                    </div>
                `;
            }

            function showNoResults() {
                noResults.innerHTML = `
                    <i class="fas fa-box-open"></i>
                    <h3>Aucun cadeau trouvé</h3>
                    <p>Essayez de modifier vos critères de recherche pour découvrir plus d'options.</p>
                `;
                noResults.style.display = 'block';
            }
        });
    </script>
{% endblock %}