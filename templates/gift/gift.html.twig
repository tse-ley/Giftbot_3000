{% extends 'base.html.twig' %}

{% block title %}GiftBot 3000 - Store{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="{{ asset('build/shared.css') }}">
    <link rel="stylesheet" href="{{ asset('build/gift.css') }}">
    <link rel="stylesheet" href="{{ asset('build/navbar.css') }}">
    <link rel="stylesheet" href="{{ asset('build/footer.css') }}">
{% endblock %}

{% block body %}
    {% include 'components/_navbar.html.twig' %}

    <!-- Hero Section with Carousel -->
    <section class="hero-section">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-6">
                    <h1 class="display-4 fw-bold mb-4">Populaire</h1>
                    <p class="lead">Découvrez nos produits les plus appréciés</p>
                </div>
                <div class="col-lg-6">
                    <div id="popularCarousel" class="carousel slide" data-bs-ride="carousel">
                        <div class="carousel-indicators">
                            <button type="button" data-bs-target="#popularCarousel" data-bs-slide-to="0" class="active"></button>
                            <button type="button" data-bs-target="#popularCarousel" data-bs-slide-to="1"></button>
                            <button type="button" data-bs-target="#popularCarousel" data-bs-slide-to="2"></button>
                        </div>
                        <div class="carousel-inner">
                            <div class="carousel-item active">
                                <div class="product-image">
                                    <img src="{{ asset('images/store/golf.jpg') }}" alt="golf" class="img-fluid" />
                                </div>
                            </div>
                            <div class="carousel-item">
                                <div class="product-image">
                                    <img src="{{ asset('images/store/nightlight.webp') }}" alt="Veilleuse" class="coffeeset" />
                                </div>
                            </div>
                            <div class="carousel-item">
                                <div class="product-image">
                                    <img src="{{ asset('images/store/pexels-photo-7497788.webp') }}" alt="vinylplayer" class="img-fluid" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <div class="container">
        <!-- Search and Filter Sections -->
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <form class="search-container d-flex" method="get" action="{{ path('app_gifts') }}">
                    <input type="text" name="q" class="search-input" placeholder="Rechercher un produit..." value="{{ searchQuery|default('') }}">
                    <button class="search-btn" type="submit"><i class="fas fa-search"></i></button>
                </form>
            </div>
        </div>
        <div class="category-nav">
            <nav class="nav justify-content-center">
                <a class="nav-link active" href="#" data-category="all">Tous</a>
                <a class="nav-link" href="#" data-category="homme">Homme</a>
                <a class="nav-link" href="#" data-category="femme">Femme</a>
                <a class="nav-link" href="#" data-category="enfants">Enfants</a>
                <a class="nav-link" href="#" data-category="animaux">Animaux</a>
                <a class="nav-link" href="#" data-category="accessoires">Accessoires</a>
            </nav>
        </div>
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="section-title mb-0">Nos Produits</h2>
            <select class="sort-dropdown">
                <option>Trier par</option>
                <option>Prix croissant</option>
                <option>Prix décroissant</option>
            </select>
        </div>

        <!-- Products Section -->
        <div class="row" id="products-container">
            {% for gift in gifts %}
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="product-card"
                        data-product-id="{{ gift.id }}"
                        data-product-name="{{ gift.name }}"
                        data-product-price="{{ gift.price }}"
                        data-product-description="{{ gift.description }}"
                        data-product-image="{{ asset(gift.imageUrl) }}"
                        data-category="{{ gift.category|lower }}">
                        <div class="product-image">
                            <img src="{{ asset(gift.imageUrl) }}" alt="{{ gift.name }}" class="img-fluid" />
                        </div>
                        <div class="product-title">{{ gift.name }}</div>
                        <div class="product-price">{{ gift.price|number_format(2, '.', ' ') }} €</div>
                    </div>
                </div>
            {% else %}
                <div class="col-12 text-center">
                    <p>Aucun produit trouvé. Essayez une autre recherche ou <a href="{{ path('app_gifts') }}">réinitialisez</a>.</p>
                </div>
            {% endfor %}
        </div>
    </div>

    <!-- Product Expanded Modal -->
    <div class="modal-backdrop-custom" id="modalBackdrop"></div>
    <div class="product-expanded" id="productModal">
        <button class="btn-close-modal" id="closeModal"><i class="fas fa-times"></i></button>
        <div class="text-center">
            <div class="product-image mb-3">
                <img id="modalImage" src="" alt="" class="img-fluid" style="max-height: 200px;" />
            </div>
            <h3 class="mb-3" id="modalTitle"></h3>
            <p class="text-muted mb-3" id="modalDescription"></p>
            <div class="mb-3">
                <span class="product-price fs-4" id="modalPrice"></span>
            </div>
            <button class="btn btn-add-cart">
                <i class="fas fa-shopping-cart me-2"></i> Ajouter au panier
            </button>
        </div>
    </div>

    {% include 'components/_footer.html.twig' %}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // --- Elements ---
            const productsContainer = document.getElementById('products-container');
            const productModal = document.getElementById('productModal');
            const modalBackdrop = document.getElementById('modalBackdrop');
            const closeModalBtn = document.getElementById('closeModal');
            const addToCartBtn = productModal.querySelector('.btn-add-cart');

            let currentProduct = {}; // Holds data for the currently open modal

            // --- 1. DYNAMIC CART BADGE LOGIC ---
            function updateCartBadge() {
                const cart = JSON.parse(localStorage.getItem('cart')) || [];
                const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
                const cartIconLink = document.querySelector('.navbar-nav .nav-link[href*="cart"]');
                
                if (!cartIconLink) return;

                let badge = cartIconLink.querySelector('.cart-badge');
                if (!badge) {
                    badge = document.createElement('span');
                    badge.className = 'badge rounded-pill bg-danger cart-badge';
                    badge.style.position = 'absolute';
                    badge.style.top = '-5px';
                    badge.style.right = '-10px';
                    badge.style.fontSize = '0.7em';
                    cartIconLink.appendChild(badge);
                }
                badge.textContent = totalItems;
                badge.style.display = totalItems > 0 ? 'inline-block' : 'none';
            }
            updateCartBadge(); // Run on page load

            // --- 2. MODAL LOGIC USING EVENT DELEGATION ---
            productsContainer.addEventListener('click', function(e) {
                const card = e.target.closest('.product-card');
                if (!card) return;

                // Populate and show the modal
                const modalImage = document.getElementById('modalImage');
                document.getElementById('modalTitle').textContent = card.dataset.productName;
                document.getElementById('modalPrice').textContent = parseFloat(card.dataset.productPrice).toFixed(2) + ' €';
                document.getElementById('modalDescription').textContent = card.dataset.productDescription;
                modalImage.src = card.dataset.productImage;
                modalImage.alt = card.dataset.productName;

                // Store product info for the "add to cart" button
                currentProduct = {
                    id: card.dataset.productId,
                    title: card.dataset.productName,
                    price: parseFloat(card.dataset.productPrice),
                    description: card.dataset.productDescription,
                    image: card.dataset.productImage,
                    quantity: 1
                };

                modalBackdrop.classList.add('show');
                productModal.classList.add('show');
                document.body.style.overflow = 'hidden';
            });

            // --- 3. ADD TO CART FROM MODAL ---
            addToCartBtn.addEventListener('click', function() {
                const cart = JSON.parse(localStorage.getItem('cart')) || [];
                const existingItemIndex = cart.findIndex(item => item.id === currentProduct.id);

                if (existingItemIndex > -1) {
                    cart[existingItemIndex].quantity += 1;
                } else {
                    cart.push(currentProduct);
                }
                localStorage.setItem('cart', JSON.stringify(cart));
                updateCartBadge();
                
                // Provide visual feedback and close modal
                this.innerHTML = '<i class="fas fa-check"></i> Ajouté!';
                setTimeout(() => {
                    closeProductModal();
                    this.innerHTML = '<i class="fas fa-shopping-cart me-2"></i> Ajouter au panier';
                }, 1000);
            });

            // --- 4. MODAL CLOSE HANDLERS ---
            function closeProductModal() {
                modalBackdrop.classList.remove('show');
                productModal.classList.remove('show');
                document.body.style.overflow = '';
            }
            closeModalBtn.addEventListener('click', closeProductModal);
            modalBackdrop.addEventListener('click', closeProductModal);
            document.addEventListener('keydown', e => (e.key === 'Escape') && closeProductModal());
            
            // --- 5. CLIENT-SIDE FILTERING & SORTING (from your original code) ---
            const categoryLinks = document.querySelectorAll('[data-category]');
            categoryLinks.forEach(link => {
                link.addEventListener('click', function(e) {
                    e.preventDefault();
                    categoryLinks.forEach(l => l.classList.remove('active'));
                    this.classList.add('active');
                    const category = this.dataset.category;
                    document.querySelectorAll('.product-card').forEach(card => {
                        const cardColumn = card.closest('.col-lg-4');
                        cardColumn.style.display = (category === 'all' || card.dataset.category === category) ? '' : 'none';
                    });
                });
            });

            const sortDropdown = document.querySelector('.sort-dropdown');
            sortDropdown.addEventListener('change', function() {
                const sortBy = this.value;
                const productCols = Array.from(productsContainer.querySelectorAll('.col-lg-4, .col-md-6'));
                productCols.sort((a, b) => {
                    const priceA = parseFloat(a.querySelector('.product-card').dataset.productPrice);
                    const priceB = parseFloat(b.querySelector('.product-card').dataset.productPrice);
                    if (sortBy === 'Prix croissant') return priceA - priceB;
                    if (sortBy === 'Prix décroissant') return priceB - priceA;
                    return 0;
                });
                productCols.forEach(col => productsContainer.appendChild(col));
            });
        });
    </script>
{% endblock %}
