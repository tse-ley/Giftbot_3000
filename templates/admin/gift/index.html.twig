{% extends 'base.html.twig' %}

{% block title %}Gift Management - GiftBot 3000{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('build/giftlist.css') }}">
{% endblock %}

{% block body %}


<div class="gift-wrapper">
    <!-- Hero Section -->
    <div class="hero-section">
        <div class="hero-content">
            <div>
                <h1 class="hero-title">
                    <i class="fas fa-gift"></i>
                    Gestion des Cadeaux
                </h1>
                <p class="hero-subtitle">Organisez et gérez votre collection de cadeaux</p>
            </div>
            <div class="hero-actions">
                <a href="{{ path('admin_dashboard', { slash: '/' }) }}" class="btn-secondary-custom">
                    <i class="fas fa-arrow-left"></i>
                    Retour au Dashboard
                </a>
                <a href="{{ path('gift_add') }}" class="btn-primary-custom">
                    <i class="fas fa-plus-circle"></i>
                    Ajouter un Cadeau
                </a>
            </div>
        </div>
    </div>

    <!-- Stats Dashboard -->
    <div class="stats-dashboard">
        <div class="stat-card">
            <div class="stat-content">
                <div class="stat-icon">
                    <i class="fas fa-gifts"></i>
                </div>
                <div class="stat-info">
                    <h3>{{ gifts|length }}</h3>
                    <p>Cadeaux Total</p>
                </div>
            </div>
        </div>
        
        <div class="stat-card">
            <div class="stat-content">
                <div class="stat-icon">
                    <i class="fas fa-star"></i>
                </div>
                <div class="stat-info">
                    <h3>{{ gifts|length > 0 ? 'Actif' : 'Vide' }}</h3>
                    <p>Statut Collection</p>
                </div>
            </div>
        </div>
        
        <div class="stat-card">
            <div class="stat-content">
                <div class="stat-icon">
                    <i class="fas fa-chart-line"></i>
                </div>
                <div class="stat-info">
                    <h3>{{ gifts|length > 5 ? 'Riche' : 'Croissance' }}</h3>
                    <p>Niveau Collection</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Table Container -->
    <div class="table-container">
        <div class="table-header">
            <h2>
                <i class="fas fa-list-ul"></i>
                Liste des Cadeaux
            </h2>
        </div>
        
        <table class="gifts-table">
            <thead>
                <tr>
                    <th>
                        <i class="fas fa-hashtag me-2"></i>
                        #
                    </th>
                    <th>
                        <i class="fas fa-tag me-2"></i>
                        Nom du Cadeau
                    </th>
                    <th>
                        <i class="fas fa-align-left me-2"></i>
                        Description
                    </th>
                    <th>
                        <i class="fas fa-calendar-plus me-2"></i>
                        Date de Création
                    </th>
                    <th>
                        <i class="fas fa-cogs me-2"></i>
                        Actions
                    </th>
                </tr>
            </thead>
            <tbody>
                {% for gift in gifts %}
                    <tr>
                        <td>
                            <div class="gift-index">
                                {{ loop.index }}
                            </div>
                        </td>
                        <td>
                            <div class="gift-name">
                                <i class="fas fa-gift gift-name-icon"></i>
                                {{ gift.name }}
                            </div>
                        </td>
                        <td>
                            <div class="gift-description">
                                {{ gift.description }}
                            </div>
                        </td>
                        <td>
                            <div class="gift-date">
                                <i class="fas fa-clock date-icon"></i>
                                {{ gift.createdAt|date('d/m/Y à H:i') }}
                            </div>
                        </td>
                        <td>
                            <div class="action-buttons">
                                <a href="{{ path('gift_delete', { id: gift.id }) }}" 
                                   class="btn-delete" 
                                   onclick="return confirm('⚠️ Êtes-vous sûr de vouloir supprimer ce cadeau ? Cette action est irréversible.');">
                                    <i class="fas fa-trash-alt"></i>
                                    Supprimer
                                </a>
                            </div>
                        </td>
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="5" class="empty-state">
                            <i class="fas fa-gift empty-state-icon"></i>
                            <h3>Aucun cadeau trouvé</h3>
                            <p>Votre collection de cadeaux est vide pour le moment.<br>
                               Commencez par ajouter votre premier cadeau !</p>
                            <a href="{{ path('gift_add') }}" class="empty-state-cta">
                                <i class="fas fa-plus-circle"></i>
                                Ajouter mon premier cadeau
                            </a>
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Animate elements on scroll
    const elements = document.querySelectorAll('.stat-card, .table-container');
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    });
    
    elements.forEach(element => {
        element.style.opacity = '0';
        element.style.transform = 'translateY(20px)';
        element.style.transition = 'opacity 0.8s ease, transform 0.8s ease';
        observer.observe(element);
    });
    
    // Enhanced table row interactions
    const tableRows = document.querySelectorAll('.gifts-table tbody tr');
    tableRows.forEach((row, index) => {
        if (!row.querySelector('.empty-state')) {
            row.addEventListener('mouseenter', function() {
                this.style.boxShadow = '0 8px 25px rgba(252, 110, 160, 0.2)';
                this.style.borderRadius = '12px';
            });
            
            row.addEventListener('mouseleave', function() {
                this.style.boxShadow = 'none';
                this.style.borderRadius = '0';
            });
        }
    });
    
    // Animated counter for stats
    const statNumbers = document.querySelectorAll('.stat-info h3');
    statNumbers.forEach(stat => {
        const text = stat.textContent.trim();
        if (!isNaN(text) && text !== '') {
            const finalNumber = parseInt(text);
            let currentNumber = 0;
            const increment = Math.ceil(finalNumber / 20);
            
            const timer = setInterval(() => {
                currentNumber += increment;
                if (currentNumber >= finalNumber) {
                    stat.textContent = finalNumber;
                    clearInterval(timer);
                } else {
                    stat.textContent = currentNumber;
                }
            }, 100);
        }
    });
    
    // Enhanced delete confirmation
    const deleteButtons = document.querySelectorAll('.btn-delete');
    deleteButtons.forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            
            const giftName = this.closest('tr').querySelector('.gift-name').textContent.trim();
            const confirmMessage = `🚨 ATTENTION !\n\nVous êtes sur le point de supprimer définitivement le cadeau :\n"${giftName}"\n\nCette action est IRRÉVERSIBLE.\n\nÊtes-vous absolument certain de vouloir continuer ?`;
            
            if (confirm(confirmMessage)) {
                // Add loading state
                this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Suppression...';
                this.style.pointerEvents = 'none';
                
                // Navigate to delete URL
                setTimeout(() => {
                    window.location.href = this.href;
                }, 500);
            }
        });
    });
    
    // Add subtle animation to gift icons
    const giftIcons = document.querySelectorAll('.gift-name-icon');
    giftIcons.forEach(icon => {
        icon.addEventListener('mouseenter', function() {
            this.style.transform = 'rotate(15deg) scale(1.2)';
            this.style.transition = 'transform 0.3s ease';
        });
        
        icon.addEventListener('mouseleave', function() {
            this.style.transform = 'rotate(0deg) scale(1)';
        });
    });
});
</script>

{% endblock %}